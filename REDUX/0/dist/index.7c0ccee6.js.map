{"mappings":"AAAA,gBAAgB;AAChB,cAAc;AACd,gBAAgB;AAChB,aAAa;AACb,KAAK;AAEL,8EAA8E;AAC9E,8CAA8C;AAC9C,kDAAkD;AAElD,yBAAyB;AACzB,sBAAsB;AACtB,sCAAsC;AAEtC,wEAAwE;AACxE,2CAA2C;AAC3C,kDAAkD;AAClD,IAAI;AAEJ,kBAAkB;AAClB,iDAAiD;AACjD,kBAAkB;AAClB,iDAAiD;AACjD,qDAAqD;AAErD,UAAU;AACV,IAAI,aAAa;IACf,OAAO;IACP,MAAM;IACN,KAAK;AACP;AAEA,SAAS,QAAQ,KAAK;IACpB,OAAO;QAAE,GAAG,KAAK;QAAE,OAAO,MAAM,KAAK,GAAG;IAAE;AAC5C;AACA,eAAe;AACf,aAAa,QAAQ;AACrB,QAAQ,GAAG,CAAC;AACZ,aAAa,QAAQ;AACrB,QAAQ,GAAG,CAAC;AACZ,aAAa,QAAQ;AACrB,QAAQ,GAAG,CAAC;AACZ,aAAa,QAAQ;AACrB,QAAQ,GAAG,CAAC","sources":["app.js"],"sourcesContent":["// let state = {\r\n//   count: 0,\r\n//   name: \"ph\",\r\n//   age: 26,\r\n// };\r\n\r\n// let prevState = state; // prevState now references the same object as state\r\n// console.log(state); // Output: { count: 0 }\r\n// console.log(prevState); // Output: { count: 0 }\r\n\r\n// function increment() {\r\n//   // Mutating State\r\n//   // state.count = state.count + 1;\r\n\r\n//   // not mutating state - creating a new object with an updated count\r\n//   // state = { count: state.count + 1 };\r\n//   state = { ...state, count: state.count + 1 };\r\n// }\r\n\r\n// // increment();\r\n// // console.log(state); // Output: { count: 1 }\r\n// // increment();\r\n// // console.log(state); // Output: { count: 2 }\r\n// // console.log(prevState); // Output: { count: 0 }\r\n\r\n// //redux\r\nlet reduxState = {\r\n  count: 0,\r\n  name: \"pg\",\r\n  age: 22,\r\n};\r\n\r\nfunction reducer(state) {\r\n  return { ...state, count: state.count + 1 };\r\n}\r\n//what redux do\r\nreduxState = reducer(reduxState);\r\nconsole.log(reduxState);\r\nreduxState = reducer(reduxState);\r\nconsole.log(reduxState);\r\nreduxState = reducer(reduxState);\r\nconsole.log(reduxState);\r\nreduxState = reducer(reduxState);\r\nconsole.log(reduxState);\r\n"],"names":[],"version":3,"file":"index.7c0ccee6.js.map","sourceRoot":"/__parcel_source_root/"}